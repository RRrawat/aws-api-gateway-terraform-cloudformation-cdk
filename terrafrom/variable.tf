variable "region" {
  description = "name the aws region where you wants to deploy the service"
  default     = "us-east-1"

}
#---------------------------------------------------
# AWS API Gateway rest api
#---------------------------------------------------
variable "enable_api_gateway_rest_api" {
  description = "Enable api gateway rest api usage"
  default     = true
  type        = bool
}

variable "api_gateway_rest_api_name" {
  description = "The name of the REST API"
  default     = "test"
}

variable "api_gateway_rest_api_description" {
  description = "(Optional) The description of the REST API"
  default     = null
}

variable "endpoint_type" {
  type        = string
  description = "The type of the endpoint. One of - PUBLIC, PRIVATE, REGIONAL"
  default     = "REGIONAL"

  validation {
    condition     = contains(["EDGE", "REGIONAL", "PRIVATE"], var.endpoint_type)
    error_message = "Valid values for var: endpoint_type are (EDGE, REGIONAL, PRIVATE)."
  }
}
#---------------------------------------------------
# AWS API Gateway api key
#---------------------------------------------------
variable "enable_api_gateway_api_key" {
  description = "Enable api gateway api key usage"
  default     = true
  type        = bool
}

variable "api_gateway_api_key_name" {
  description = "The name of the API key"
  default     = "dev_key"
}

variable "api_gateway_api_key_description" {
  description = "(Optional) The API key description. Defaults to 'Managed by Terraform'."
  default     = "Managed by Terraform"
}

variable "api_gateway_api_key_enabled" {
  description = "(Optional) Specifies whether the API key can be used by callers. Defaults to true."
  default     = true
  type        = bool
}

variable "api_gateway_api_key_value" {
  description = "(Optional) The value of the API key. If not specified, it will be automatically generated by AWS on creation."
  default     = null
}


#---------------------------------------------------
# AWS API Gateway deployment
#---------------------------------------------------
variable "enable_api_gateway_deployment" {
  description = "Enable api gateway deployment usage"
  default     = false
  type        = bool
}

variable "api_gateway_deployment_stage_name" {
  description = "(Optional) The name of the stage. If the specified stage already exists, it will be updated to point to the new deployment. If the stage does not exist, a new one will be created and point to this deployment."
  default     = null
}

variable "api_gateway_deployment_description" {
  description = "(Optional) The description of the deployment"
  default     = null
}

variable "api_gateway_deployment_stage_description" {
  description = "(Optional) The description of the stage"
  default     = null
}

variable "api_gateway_deployment_variables" {
  description = "(Optional) A map that defines variables for the stage"
  default     = null
}

#---------------------------------------------------
# AWS API Gateway stage
#---------------------------------------------------
variable "enable_api_gateway_stage" {
  description = "Enable api gateway stage usage"
  default     = false
}
variable "api_gateway_stage_stage_name" {
  description = "The name of the stage"
  default     = ""
}

variable "api_gateway_stage_description" {
  description = "(Optional) The description of the stage"
  default     = null
}

#---------------------------------------------------
# AWS API Gateway usage plan
#---------------------------------------------------
variable "enable_api_gateway_usage_plan" {
  description = "Enable api gateway usage plan usage"
  default     = false
}

variable "api_gateway_usage_plan_name" {
  description = "The name of the usage plan."
  default     = ""
}

variable "api_gateway_usage_plan_description" {
  description = "(Optional) The description of a usage plan."
  default     = null
}

variable "api_gateway_usage_plan_product_code" {
  description = "(Optional) The AWS Markeplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace."
  default     = null
}

variable "api_gateway_usage_plan_api_stages" {
  description = "(Optional) The associated API stages of the usage plan."
  default     = null
}

#---------------------------------------------------
# AWS API Gateway usage plan key
#---------------------------------------------------
variable "enable_api_gateway_usage_plan_key" {
  description = "Enable api gateway usage plan key usage"
  default     = false
}


variable "api_gateway_usage_plan_key_key_type" {
  description = "(Required) The type of the API key resource. Currently, the valid key type is API_KEY."
  default     = "API_KEY"
}



#---------------------------------------------------
# AWS API Gateway method settings
#---------------------------------------------------
variable "enable_api_gateway_method_settings" {
  description = "Enable api gateway method settings usage"
  default     = false
}


variable "api_gateway_method_settings_method_path" {
  description = "(Required) Method path defined as {resource_path}/{http_method} for an individual method override, or */* for overriding all methods in the stage."
  default     = ""
}

variable "api_gateway_method_settings_settings" {
  description = "(Required) The settings block"
  default     = []
}

#---------------------------------------------------
# AWS API Gateway resource
#---------------------------------------------------
variable "enable_api_gateway_resource" {
  description = "Enable api gateway resource usage"
  default     = false
}

variable "api_gateway_resource_path_part" {
  description = "(Required) The last path segment of this API resource."
  default     = null
}

#---------------------------------------------------
# AWS API Gateway method
#---------------------------------------------------
variable "enable_api_gateway_method" {
  description = "Enable api gateway method usage"
  default     = true
  type        = bool
}


variable "api_gateway_method_http_method" {
  description = "(Required) The HTTP Method (GET, POST, PUT, DELETE, HEAD, OPTIONS, ANY)"
  default     = "GET"
}

variable "api_gateway_method_api_key_required" {
  description = "(Optional) Specify if the method requires an API key"
  default     = true
}


#---------------------------------------------------
# AWS API Gateway integration
#---------------------------------------------------
variable "enable_api_gateway_integration" {
  description = "Enable api gateway integration usage"
  default     = false
}

variable "api_gateway_integration_type" {
  description = "(Required) The integration input's type. Valid values are HTTP (for HTTP backends), MOCK (not calling any real backend), AWS (for AWS services), AWS_PROXY (for Lambda proxy integration) and HTTP_PROXY (for HTTP proxy integration). An HTTP or HTTP_PROXY integration with a connection_type of VPC_LINK is referred to as a private integration and uses a VpcLink to connect API Gateway to a network load balancer of a VPC."
  default     = null
}

variable "api_gateway_integration_integration_http_method" {
  description = "(Optional) The integration HTTP method (GET, POST, PUT, DELETE, HEAD, OPTIONs, ANY, PATCH) specifying how API Gateway will interact with the back end. Required if type is AWS, AWS_PROXY, HTTP or HTTP_PROXY. Not all methods are compatible with all AWS integrations. e.g. Lambda function can only be invoked via POST."
  default     = null
}
variable "api_gateway_integration_uri" {
  description = "(Optional) The input's URI. Required if type is AWS, AWS_PROXY, HTTP or HTTP_PROXY. For HTTP integrations, the URI must be a fully formed, encoded HTTP(S) URL according to the RFC-3986 specification . For AWS integrations, the URI should be of the form arn:aws:apigateway:{region}:{subdomain.service|service}:{path|action}/{service_api}. region, subdomain and service are used to determine the right endpoint. e.g. arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:012345678901:function:my-func/invocations"
  default     = null
}

#---------------------------------------------------
# AWS API Gateway method response
#---------------------------------------------------
variable "enable_api_gateway_method_response" {
  description = "Enable api gateway method response usage"
  default     = false
}


variable "api_gateway_method_response_status_code" {
  description = "(Required) The HTTP status code"
  default     = 200
}

variable "api_gateway_method_response_response_models" {
  description = "(Optional) A map of the API models used for the response's content type"
  default     = null
}

variable "api_gateway_method_response_response_templates" {
  description = "(Optional) A map of response parameters that can be sent to the caller. For example: response_parameters = { 'method.response.header.X-Some-Header' = true } would define that the header X-Some-Header can be provided on the response."
  default     = null
}


#---------------------------------------------------
# AWS API Gateway integration response
#---------------------------------------------------
variable "enable_api_gateway_integration_response" {
  description = "Enable api gateway integration response usage"
  default     = false
}
